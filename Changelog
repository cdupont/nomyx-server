
V0.8:
- use Lens library
- use happstack-authenticate 2
- suppress MsgVar and ArrayVar
- add an API based on message passing to allow rules to communicate between them
- new package Library

V0.7:
- full FRP engine for managing events
- dynamic events: event tree is recomputed at each request
- event is now an instance of Monad, MonadPlus
- added typeclass "Shortcut" for interruptible events
- bug fixes, cosmetics

V0.6:
- added composable events: events have now an Applicative and Alternative interfaces
- moved the Engine part from Nomyx-Language to Nomyx-Core. Nomyx-Language now contains only the DSL useful for the player.
- bug fixes, cosmetics

V0.5:
- split the game into 4 packages: Nomyx-Language, Nomyx-Core, Nomyx-Web and Nomyx.
- use Eason for serialization
- use Travis for continuous integration
- protect the game againts malicious codes (a la mueval)
- separate effectful instructions from non effectful instructions in the DSL
- possibility to fork games to test own rules in a sandbox game
- "check rule" button to type check a rule
- bug fixes, cosmetics

V0.4:
- created language APIs
- building on Windows (thanks to Michael Steele)
- tar file for downloading game save files
- outputs includes viewers (not only players)
- splitted Definition into Events, Inputs, Outputs, Players, Variables

V0.3:
- creation of admin role
- inputs made by the rules now include checkboxes, buttons, textarea
- outputs made by the rules are now managed (create, update, delete)
- refactored the GUI
- bumped to GHC 7.6
- compilation errors are displayed in context
- bug fixes

V0.2:
- new login system: you can now login with your Google, Yahoo, Live Journal, Myspace, OpenId or Facebook accounts (thanks to happstack-authenticate)!
- new DSL for voting
- styling: rule code colorized, better settings and help
- use cookies to store the user ID (as suggested on this mailing list)
- new error system to handle exceptions in rules (with ErrorT)
- use lenses

